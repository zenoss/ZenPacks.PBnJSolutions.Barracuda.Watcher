#!/usr/bin/perl

use POSIX;
use strict;
use warnings;
use lib $ENV{ZENHOME}."/libexec";
use utils qw($TIMEOUT %ERRORS &print_revision &support);
use XML::Simple;
use Getopt::Long;
use FileHandle;

Getopt::Long::Configure('bundling');

my $opt_H;
GetOptions("hostname|H=s" => \$opt_H);
($opt_H) || usage("Host name/address not specified\n");

my $target = $1 if ($opt_H =~ /([-.A-Za-z0-9]+)/);
($target) || usage("Invalid host: $opt_H\n");

my $pipe = new FileHandle;

$pipe->open("wget -o /dev/null -O - --no-check-certificate https://$target/cgi-bin/stats.cgi |");
my $barracuda = new XML::Simple->XMLin($pipe);

# Decide whether the cuda is OK and then follow that judgement with a bunch of variables
(defined $barracuda) || die("Unable to parse stats XML.");

my $spams = 0;
my $bad_recipients = 0;
my $viruses = 0;
my $quarantined = 0;
my $tagged = 0;
my $allowed = 0;
my $rate_control = 0;

# Add up the numbers for each stat for the last 24 hours.
foreach my $hour (keys(%{$barracuda->{hourly}})) {
	$spams += $barracuda->{hourly}{$hour}{spams};
	$bad_recipients += $barracuda->{hourly}->{$hour}->{bad_recipients};
	$viruses += $barracuda->{hourly}->{$hour}->{viruses};
	$quarantined += $barracuda->{hourly}->{$hour}->{quarantined};
	$tagged += $barracuda->{hourly}->{$hour}->{tagged};
	$allowed += $barracuda->{hourly}->{$hour}->{allowed};
	$rate_control += $barracuda->{hourly}->{$hour}->{rate_control};
}

my $printStr = "CUDA-$target OK |";
$printStr .= " iqs=$barracuda->{performance}->{inbound_queue_size};;0";
$printStr .= " oqs=$barracuda->{performance}->{outbound_queue_size};;0";
$printStr .= " spam=$spams;;0 bad=$bad_recipients;;0";
$printStr .= " virus=$viruses;;0 quarantine=$quarantined;;0";
$printStr .= " tag=$tagged;;0 allow=$allowed;;0";
$printStr .= " rate_control=$rate_control;;0";
$printStr .= "\n";

print $printStr;

exit $ERRORS{'OK'};
